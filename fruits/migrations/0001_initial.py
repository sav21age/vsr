# Generated by Django 5.0.1 on 2024-03-09 10:59

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('plants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FruitProductPriceAge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField(choices=[(1, '1-летка'), (2, '2-летка'), (3, '3-летка'), (4, '4-летка'), (5, '5-летка'), (6, '6-летка'), (7, '7-летка'), (8, '8-летка'), (9, '9-летка'), (10, '10-летка'), (11, '11-летка'), (12, '12-летка')], default=1, unique=True, verbose_name='возраст')),
            ],
            options={
                'verbose_name': 'возраст растения',
                'verbose_name_plural': 'возраст растений',
                'ordering': ('age',),
            },
        ),
        migrations.CreateModel(
            name='FruitProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_title', models.CharField(max_length=80, verbose_name='заголовок')),
                ('meta_description', models.CharField(max_length=160, verbose_name='мета описание')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='название')),
                ('slug', models.SlugField(max_length=80, unique=True, verbose_name='слаг')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('short_description', models.CharField(max_length=250, verbose_name='короткое описание')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('scientific_name', models.CharField(blank=True, max_length=100, verbose_name='научное название')),
                ('height', models.CharField(blank=True, help_text='Можно вводить цифры, от, до, м, см, "-" и ",". Например: 0,5 м, 0,5-1 м, от 0,5 м, до 0,5 м', max_length=10, validators=[django.core.validators.RegexValidator('^((от|до)[\\s])?\\d{1,3}(\\,\\d{1,3})?(\\-?\\d{1,3}(\\,\\d{1,3})?)?([\\s](м|см))?$', 'Можно вводить цифры, от, до, м, см, "-" и ","')], verbose_name='высота взрослого растения')),
                ('width', models.CharField(blank=True, help_text='Можно вводить цифры, от, до, м, см, "-"  и ",". Например: 0,5 м, 0,5-1 м, от 0,5 м, до 0,5 м', max_length=10, validators=[django.core.validators.RegexValidator('^((от|до)[\\s])?\\d{1,3}(\\,\\d{1,3})?(\\-?\\d{1,3}(\\,\\d{1,3})?)?([\\s](м|см))?$', 'Можно вводить цифры, от, до, м, см, "-" и ","')], verbose_name='ширина взрослого растения')),
                ('features', models.CharField(blank=True, max_length=250, verbose_name='особенности')),
                ('flowering', models.CharField(blank=True, max_length=7, verbose_name='цветение')),
                ('rootstock', models.CharField(blank=True, max_length=15, verbose_name='подвой')),
                ('fruit_ripening', models.CharField(blank=True, max_length=250, verbose_name='время созревания плодов')),
                ('fruit_taste', models.CharField(blank=True, max_length=250, verbose_name='вкус плодов')),
                ('fruit_size', models.CharField(blank=True, help_text='Можно вводить цифры, от, до, "-". Например: 5, 5-10, от 5, до 5.', max_length=7, validators=[django.core.validators.RegexValidator('^[0-9+\\-\\+\\/дот, ]+$', 'Можно вводить цифры, "/", "-" и "+"')], verbose_name='размер плодов, см')),
                ('fruit_keeping_quality', models.CharField(blank=True, max_length=250, verbose_name='лежкость плодов')),
                ('beginning_fruiting', models.CharField(blank=True, help_text='Можно вводить цифры, от, до, "-". Например: 5, 5-10, от 5, до 5.', max_length=7, validators=[django.core.validators.RegexValidator('^[0-9+\\-\\+\\/дот, ]+$', 'Можно вводить цифры, "/", "-" и "+"')], verbose_name='начало плодоношения у растения, г')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('advantages', models.ManyToManyField(blank=True, related_name='+', to='plants.plantadvantage', verbose_name='достоинства')),
            ],
            options={
                'verbose_name': 'плодовое растение',
                'verbose_name_plural': 'плодовые растения',
                'ordering': ('name', 'species'),
            },
        ),
        migrations.CreateModel(
            name='FruitProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='цена, руб')),
                ('height', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^[0-9+\\-\\+\\/дот, ]+$', 'Можно вводить цифры, "/", "-" и "+"')], verbose_name='высота, см')),
                ('width', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^[0-9+\\-\\+\\/дот, ]+$', 'Можно вводить цифры, "/", "-" и "+"')], verbose_name='ширина, см')),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='plants.plantpricecontainer', verbose_name='контейнер')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fruits.fruitproduct', verbose_name='растение')),
                ('rs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='plants.plantpricerootsystem', verbose_name='корневая система')),
                ('age', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fruits.fruitproductpriceage', verbose_name='возраст')),
            ],
            options={
                'verbose_name': 'цена',
                'verbose_name_plural': 'цены',
                'ordering': ('price',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FruitSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Классификация растений: Отдел \\ Род \\ Вид. Пример: Хвойные \\ Ель \\ Ель канадская.', max_length=100, unique=True, verbose_name='вид')),
                ('genus', models.ForeignKey(help_text='Классификация растений: Отдел \\ Род. Пример: Хвойные \\ Ель.', on_delete=django.db.models.deletion.CASCADE, to='plants.plantgenus', verbose_name='род')),
            ],
            options={
                'verbose_name': 'вид плодовых растений',
                'verbose_name_plural': 'виды плодовых растений',
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='fruitproduct',
            name='species',
            field=models.ForeignKey(help_text='Классификация растений: Отдел \\ Род \\ Вид. Пример: Хвойные \\ Ель \\ Ель канадская.', on_delete=django.db.models.deletion.CASCADE, to='fruits.fruitspecies', verbose_name='вид'),
        ),
        migrations.AddIndex(
            model_name='fruitproduct',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fruits_frui_search__46f7b8_gin'),
        ),
        migrations.AddIndex(
            model_name='fruitproduct',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='trgm_fruitproduct_idx', opclasses=['gin_trgm_ops']),
        ),
    ]
